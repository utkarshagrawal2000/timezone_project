name: Deploy to EC2 🚀

on:
  push:
    branches:
      - "main" # This triggers the workflow on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up SSH key and whitelist EC2 IP address 🐻‍❄️
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.HOSTNAME }} >> ~/.ssh/known_hosts

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create virtual environment
        run: python -m venv venv

      - name: Install requirements
        run: |
          source venv/bin/activate
          pip install -r p1/requirement.txt
      # - name: Test Redis Connection
      #   run: |
      #       source venv/bin/activate
      #       python -m pip install --upgrade pip
      #       pip install redis redis-cli
        
      #       # Try installing redis-tools
      #       sudo apt-get update
      #       sudo apt-get install redis-tools
        
      #       # Try specifying full path to redis-cli
      #       /usr/bin/redis-cli -h 65.2.177.148 -p 6379 ping
      #   continue-on-error: true

      - name: Execute tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install redis redis-cli
          export SECRET_KEY="$SECRET_KEY"  # Set SECRET_KEY environment variable
          python p1/manage.py test app
      - name: Deploy to server
        if: success()
        env:
          EC2_HOST: ${{ secrets.HOSTNAME }}
          EC2_USERNAME: ${{ secrets.USERNAME }}
        #uses: appleboy/ssh-action@master
        #with:
         # host: ${{ secrets.HOSTNAME }}
          #username: ${{ secrets.USERNAME }}
          #key: ${{ secrets.PRIVATE_KEY }}
        run: |
            # Copy project files to the server
            scp -r p1/* $EC2_USERNAME@$EC2_HOST:/home/ubuntu/deployment
            ssh $EC2_USERNAME@$EC2_HOST "chmod +x /home/ubuntu/deployment/deploy.sh && /home/ubuntu/deployment/deploy.sh"
      - name: Clean up SSH key 🚀
        if: always()
        run: rm -f ~/.ssh/id_rsa
